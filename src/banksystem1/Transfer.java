/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package banksystem1;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author TH3_HACK3R
 */
public class Transfer extends javax.swing.JDialog {

    Account a2=null;
    Account a3=null;
    private int AccNum;
    /**
     * Creates new form Transfer
     */
    public Transfer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
    }

    public Transfer(java.awt.Frame parent, boolean modal,int AccNum) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        this.AccNum=AccNum;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TransAccNum = new javax.swing.JLabel();
        TransAccNumTxt = new javax.swing.JTextField();
        ValueLbl = new javax.swing.JLabel();
        AmountTxt = new javax.swing.JTextField();
        TransferBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(3, 2, 5, 5));

        TransAccNum.setText("Transfree Account Number");
        getContentPane().add(TransAccNum);
        getContentPane().add(TransAccNumTxt);

        ValueLbl.setText("Value");
        getContentPane().add(ValueLbl);

        AmountTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmountTxtActionPerformed(evt);
            }
        });
        getContentPane().add(AmountTxt);

        TransferBtn.setText("Transfer");
        TransferBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransferBtnActionPerformed(evt);
            }
        });
        getContentPane().add(TransferBtn);

        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });
        getContentPane().add(CancelBtn);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void AmountTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmountTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AmountTxtActionPerformed

    private void TransferBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransferBtnActionPerformed
        // TODO add your handling code here:
        
        double Test;
        
        if(TransAccNumTxt.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Transfree Acccount Number cannot be empty", "ERROR!!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // lazem 2t2ked enha m4 string 34an m4 hy3rf y7wlha

        else
        {
            try
            {
                Test=Integer.parseInt(TransAccNumTxt.getText());
            }
            catch(NumberFormatException ex)
            {
                JOptionPane.showMessageDialog(this, "Transfree Acccount Number must be an integer number", "ERROR!!", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
        }
        if(Integer.parseInt(TransAccNumTxt.getText())<=0)
        {
            JOptionPane.showMessageDialog(this, "Transfree Acccount Number cannot equal to 0 or negative value", "ERROR!!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(Integer.parseInt(TransAccNumTxt.getText())==AccNum)
        {
            JOptionPane.showMessageDialog(this, "Transfree Acccount Number cannot be the same Account", "ERROR!!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(AmountTxt.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Value cannot be empty", "ERROR!!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // lazem 2t2ked enha m4 string 34an m4 hy3rf y7wlha

        else
        {
            try
            {
                Test=Double.parseDouble(AmountTxt.getText());
            }
            catch(NumberFormatException ex)
            {
                JOptionPane.showMessageDialog(this, "Value must be a number", "ERROR!!", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
        }
        if(Double.parseDouble(AmountTxt.getText())<=0)
        {
            JOptionPane.showMessageDialog(this, "Value cannot equal to 0 or negative value", "ERROR!!", JOptionPane.ERROR_MESSAGE);
            return;
        }
              
        double A=Double.parseDouble(AmountTxt.getText());
              ArrayList accounts;
        try {
            accounts = Account.load2();
            if(Integer.parseInt(TransAccNumTxt.getText())>accounts.size()){ 
                JOptionPane.showMessageDialog(this, "There is no Account with this number\nPlease try again", "ERROR!!", JOptionPane.ERROR_MESSAGE);
                return;
            }
            else{
            a2 = (Account)accounts.get(AccNum-1);
            a3 = (Account)accounts.get(Integer.parseInt(TransAccNumTxt.getText())-1);
            if(Double.parseDouble(AmountTxt.getText())>a2.getBalance())
            {
                JOptionPane.showMessageDialog(this, "Value can't be greater than existing balance", "ERROR!!", JOptionPane.ERROR_MESSAGE);
                return;
            }
            else{
            
            
            a2.transfer(a3, A);
            JOptionPane.showMessageDialog(this, "Transfered Value = "+ A);
            }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Withdraw.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Withdraw.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Transfer.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            this.dispose();
    }//GEN-LAST:event_TransferBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Transfer dialog = new Transfer(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AmountTxt;
    private javax.swing.JButton CancelBtn;
    private javax.swing.JLabel TransAccNum;
    private javax.swing.JTextField TransAccNumTxt;
    private javax.swing.JButton TransferBtn;
    private javax.swing.JLabel ValueLbl;
    // End of variables declaration//GEN-END:variables
public Account getAcc1()
    {
        return this.a2;
    }
public Account getAcc2()
    {
        return this.a3;
    }

}
