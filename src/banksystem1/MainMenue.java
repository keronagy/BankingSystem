/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package banksystem1;

import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author TH3_HACK3R
 */
public class MainMenue extends javax.swing.JFrame {

    /**
     * Creates new form MainMenue
     */
    public MainMenue() throws FileNotFoundException, UnsupportedEncodingException {
        Account.load2();
        initComponents();
        setLocationRelativeTo(null);
    }

    public int getAccNum()
{
    int i = (int) AccTable.getValueAt(0, 1);
    return i;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel1 = new javax.swing.JPanel();
        AddAccBtn = new javax.swing.JButton();
        FinishBtn = new javax.swing.JButton();
        WithdrawBtn = new javax.swing.JButton();
        DepositBtn = new javax.swing.JButton();
        TransferBtn = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AccTable = new javax.swing.JTable();
        EnqBtn = new javax.swing.JButton();
        ExitBtn = new javax.swing.JButton();
        AboutBtn = new javax.swing.JButton();
        OpenAccBtn = new javax.swing.JButton();
        CloseAccBtn = new javax.swing.JButton();
        LoadTransBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bank System");

        AddAccBtn.setText("Add Account");
        AddAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAccBtnActionPerformed(evt);
            }
        });

        FinishBtn.setText("Finish");
        FinishBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinishBtnActionPerformed(evt);
            }
        });

        WithdrawBtn.setText("Withdraw");
        WithdrawBtn.setEnabled(false);
        WithdrawBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WithdrawBtnActionPerformed(evt);
            }
        });

        DepositBtn.setText("Deposit");
        DepositBtn.setEnabled(false);
        DepositBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DepositBtnActionPerformed(evt);
            }
        });

        TransferBtn.setText("Transfer");
        TransferBtn.setEnabled(false);
        TransferBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransferBtnActionPerformed(evt);
            }
        });

        jButton6.setText("Change Currency");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        AccTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account Name", "Account Number", "Balance", "Account Type", "Opened"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AccTable.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, AccTable, org.jdesktop.beansbinding.ELProperty.create("false"), AccTable, org.jdesktop.beansbinding.BeanProperty.create("rowSelectionAllowed"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(AccTable);
        if (AccTable.getColumnModel().getColumnCount() > 0) {
            AccTable.getColumnModel().getColumn(0).setResizable(false);
            AccTable.getColumnModel().getColumn(1).setResizable(false);
            AccTable.getColumnModel().getColumn(2).setResizable(false);
            AccTable.getColumnModel().getColumn(3).setResizable(false);
            AccTable.getColumnModel().getColumn(4).setResizable(false);
        }

        EnqBtn.setText("Enqueue");
        EnqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnqBtnActionPerformed(evt);
            }
        });

        ExitBtn.setText("Exit");
        ExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitBtnActionPerformed(evt);
            }
        });

        AboutBtn.setText("About");
        AboutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutBtnActionPerformed(evt);
            }
        });

        OpenAccBtn.setText("Open Account");
        OpenAccBtn.setEnabled(false);
        OpenAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenAccBtnActionPerformed(evt);
            }
        });

        CloseAccBtn.setText("Close Account");
        CloseAccBtn.setEnabled(false);
        CloseAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseAccBtnActionPerformed(evt);
            }
        });

        LoadTransBtn.setText("Load Transaction");
        LoadTransBtn.setEnabled(false);
        LoadTransBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadTransBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AddAccBtn)
                .addGap(18, 18, 18)
                .addComponent(EnqBtn)
                .addGap(18, 18, 18)
                .addComponent(WithdrawBtn)
                .addGap(18, 18, 18)
                .addComponent(DepositBtn)
                .addGap(18, 18, 18)
                .addComponent(TransferBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addGap(18, 18, 18)
                .addComponent(FinishBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(OpenAccBtn)
                .addGap(42, 42, 42)
                .addComponent(CloseAccBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LoadTransBtn)
                .addGap(50, 50, 50)
                .addComponent(AboutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(ExitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddAccBtn)
                    .addComponent(WithdrawBtn)
                    .addComponent(DepositBtn)
                    .addComponent(TransferBtn)
                    .addComponent(jButton6)
                    .addComponent(EnqBtn)
                    .addComponent(FinishBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ExitBtn)
                    .addComponent(AboutBtn)
                    .addComponent(OpenAccBtn)
                    .addComponent(CloseAccBtn)
                    .addComponent(LoadTransBtn)))
        );

        fileMenu.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Add Account");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem1);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setText("Enqueue");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem8);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Withdraw");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Deposit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Transfer");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Change Currency");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem5);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setText("Finish (Dequeue)");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem9);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem6.setText("Exit");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem6);

        jMenuBar1.add(fileMenu);

        jMenu2.setText("Help");

        jMenuItem7.setText("About");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAccBtnActionPerformed
        // TODO add your handling code here:
        AddNewAccount NewAcc = new AddNewAccount(this, true);
        
        NewAcc.setVisible(true);
       
        
    }//GEN-LAST:event_AddAccBtnActionPerformed

    
    
    private void TransferBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransferBtnActionPerformed
        // TODO add your handling code here:
        if(AccTable.getValueAt(0, 4)== "Yes")
        {
        Transfer T = new Transfer(this, true,(int) AccTable.getValueAt(0, 1));
        
        T.setVisible(true);
        
        if(T.getAcc1()!=null)
        {
            reloadRow(T.getAcc1());
        }
        if(T.getAcc2()!=null)
        {
            for(int i = 0; i < AccTable.getRowCount(); i++){//For each row
        //For each column in that row
            if((int) AccTable.getModel().getValueAt(i, 1)==T.getAcc2().getAccNo()){//Search the model
                //System.out.println(AccTable.getModel().getValueAt(i, j));//Print if found string
                reloadRow2(T.getAcc2(), i);
            }
        
            }   
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Account must be opened to de any operation", "ERROR!!", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
//        setLayout(null);
//         JDialog d= new JDialog(this,false);
//         d.setTitle("Transfer Process");
//        d.setSize(300,400);
//        d.setLocationRelativeTo(null);
//        d.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
//        d.setVisible(true);
//        d.getContentPane().setLayout(null);
//        d.setResizable(false);
//        
//        JLabel lbl1 =new JLabel();
//        JLabel lbl2 =new JLabel();
//        
//        
//        lbl1.setText(" Transferee Account Number ");
//        lbl1.setBounds(0,20,250,40);
//        
//        
//        lbl2.setText("  How much?");
//        lbl2.setBounds(0,60,250,40);
//        
//        JTextField txt1 = new JTextField();
//        JTextField txt2 = new JTextField();
//        
//        txt1.setBounds(165,20,130,40);
//        txt2.setBounds(165,60,130,40);
//        
//        
//        JButton t = new JButton("Transfer");
//        JButton c = new JButton("Cancel");
//        JButton Bckgd=new JButton();
//        
//        t.setBounds(40, 120 ,100,40);
//        c.setBounds(140, 120 , 100,40);
//        
//        t.addActionListener(new ActionListener()
//        {
//            public void actionPerformed(ActionEvent evt)
//            {
//            
//              
//              double A=Double.parseDouble(txt2.getText());
//              
//              //Call transfer function through the array 
//             
//              ArrayList accounts;
//        try {
//            accounts = Account.load2();
//            Account a2 = (Account)accounts.get((int) AccTable.getValueAt(0, 1)-1);
//            Account a3 = (Account)accounts.get(Integer.parseInt(txt1.getText())-1);
//            a2.transfer(a3, A);
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(Withdraw.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (UnsupportedEncodingException ex) {
//            Logger.getLogger(Withdraw.class.getName()).log(Level.SEVERE, null, ex);
//        }
//            }
//
//            
//        }
//        );
//        
//        
//        c.addActionListener(new ActionListener()
//        {
//            public void actionPerformed(ActionEvent evt)
//            {
//            
//              d.dispose();
//             
//            }
//        }
//        );
//        
//        
//        Bckgd.setBounds(0,0,300,400);
//        
//        //Adding to JDialog
//        d.add(txt1);
//        d.add(txt2);
//        d.add(lbl1);
//        d.add(lbl2);
//        d.add(t);
//        d.add(c);
//        d.add(Bckgd);
//         Bckgd.setIcon(new ImageIcon("C:\\Users\\TH3_HACK3R\\Desktop\\BankSystem1\\Financial-intermediary.jpg"));                                     

    }//GEN-LAST:event_TransferBtnActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        AddNewAccount NewAcc = new AddNewAccount(this, true);
        
        NewAcc.setVisible(true);
       
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void WithdrawBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WithdrawBtnActionPerformed
        // TODO add your handling code here:
        
        if(AccTable.getValueAt(0, 4)== "Yes")
        {
        
        Withdraw w = new Withdraw(this, true,(int) AccTable.getValueAt(0, 1));
        
        w.setVisible(true);
        if(w.getAcc()!=null)
        {
            reloadRow(w.getAcc());
        }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Account must be opened to de any operation", "ERROR!!", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_WithdrawBtnActionPerformed

    private void DepositBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DepositBtnActionPerformed
        // TODO add your handling code here:
        if(AccTable.getValueAt(0, 4)== "Yes")
        {
        Deposit d = new Deposit(this, true,(int) AccTable.getValueAt(0, 1));
        
        d.setVisible(true);
        
        if(d.getAcc()!=null)
        {
            reloadRow(d.getAcc());
        }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Account must be opened to de any operation", "ERROR!!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DepositBtnActionPerformed

    private void EnqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnqBtnActionPerformed
        // TODO add your handling code here:
        
        Enqueue Enq = new Enqueue(this, true);
        
        Enq.setVisible(true);
        
        if(Enq.getAcc()!=null)
        {
            for(int i = 0; i < AccTable.getRowCount(); i++){//For each row
        //For each column in that row
            if((int) AccTable.getModel().getValueAt(i, 1)==Enq.getAcc().getAccNo()){//Search the model
                JOptionPane.showMessageDialog(this, "Account is already Enqueued", "ERROR!!", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            }
            
            Node Acco = new Node(Enq.getAcc());
            Account.q.enqueue(Acco);
            addAccount(Enq.getAcc());
            enableBtns(true);
        }
//        if(!Account.q.isEmpty())
//        {
//            try {
//                addAccount(Account.q.dequeue().getData());
//            } catch (IOException ex) {
//                Logger.getLogger(MainMenue.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
//        else
//        {
//            JOptionPane.showMessageDialog(this, "There is no elements in the queue", "ERROR!!", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
    }//GEN-LAST:event_EnqBtnActionPerformed

    private void FinishBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinishBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) AccTable.getModel();
        int i;
        
        
        if(!Account.q.isEmpty())
        {
            try {
                model.removeRow(0);
                Account.q.dequeue();
                i =model.getRowCount();
                if(i==0)
                {
                    enableBtns(false);
                }
            } catch (IOException ex) {
                Logger.getLogger(MainMenue.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            
            JOptionPane.showMessageDialog(this, "There is no elements in the queue", "ERROR!!", JOptionPane.ERROR_MESSAGE);
            //enableBtns(false);
            return;
        }
    
    }//GEN-LAST:event_FinishBtnActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        ChangeCurrency c = new ChangeCurrency(this, true);
        
        c.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
         Withdraw w = new Withdraw(this, true,(int) AccTable.getValueAt(0, 1));
        
        w.setVisible(true);
        if(w.getAcc()!=null)
        {
            reloadRow(w.getAcc());
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        Deposit d = new Deposit(this, true,(int) AccTable.getValueAt(0, 1));
        
        d.setVisible(true);
        
        if(d.getAcc()!=null)
        {
            reloadRow(d.getAcc());
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        ChangeCurrency c = new ChangeCurrency(this, true);
        
        c.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        About A = new About(this, true);
        
        A.setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void ExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitBtnActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitBtnActionPerformed

    private void AboutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutBtnActionPerformed
        // TODO add your handling code here:
        About A = new About(this, true);
        
        A.setVisible(true);
    }//GEN-LAST:event_AboutBtnActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        
        Transfer T = new Transfer(this, true,(int) AccTable.getValueAt(0, 1));
        
        T.setVisible(true);
        
        if(T.getAcc1()!=null)
        {
            reloadRow(T.getAcc1());
        }
        if(T.getAcc2()!=null)
        {
            for(int i = 0; i < AccTable.getRowCount(); i++){//For each row
        //For each column in that row
            if((int) AccTable.getModel().getValueAt(i, 1)==T.getAcc2().getAccNo()){//Search the model
                //System.out.println(AccTable.getModel().getValueAt(i, j));//Print if found string
                reloadRow2(T.getAcc2(), i);
            }
        
            }   
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        Enqueue Enq = new Enqueue(this, true);
        
        Enq.setVisible(true);
        
        if(Enq.getAcc()!=null)
        {
            for(int i = 0; i < AccTable.getRowCount(); i++){//For each row
        //For each column in that row
            if((int) AccTable.getModel().getValueAt(i, 1)==Enq.getAcc().getAccNo()){//Search the model
                JOptionPane.showMessageDialog(this, "Account is already Enqueued", "ERROR!!", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            }
            
            Node Acco = new Node(Enq.getAcc());
            Account.q.enqueue(Acco);
            addAccount(Enq.getAcc());
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) AccTable.getModel();
        
        if(!Account.q.isEmpty())
        {
            try {
                model.removeRow(0);
                Account.q.dequeue();
            } catch (IOException ex) {
                Logger.getLogger(MainMenue.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "There is no elements in the queue", "ERROR!!", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void CloseAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseAccBtnActionPerformed
        // TODO add your handling code here:
        ArrayList accounts;
        
        
        try {
            accounts = Account.load2();
            Account account = (Account)accounts.get(getAccNum()-1);
            if(account.isOpened()=="Yes")
            {
                if(account.getBalance()>0)
                {
                    JOptionPane.showMessageDialog(this, "Can't close, Still have money", "ERROR!!", JOptionPane.ERROR_MESSAGE);
                    return; 
                }
                else{
            account.closeAcc();
            reloadRow(account);
            }
            }
            else
            {
               JOptionPane.showMessageDialog(this, "The Account is already Closed", "ERROR!!", JOptionPane.ERROR_MESSAGE);
                return; 
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainMenue.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(MainMenue.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
    }//GEN-LAST:event_CloseAccBtnActionPerformed

    private void OpenAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenAccBtnActionPerformed
        // TODO add your handling code here:
        ArrayList accounts;
        try {
            accounts = Account.load2();
            Account account = (Account)accounts.get(getAccNum()-1);
            if(account.isOpened()=="No")
            {
            account.reopenAcc();
            reloadRow(account);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "The Account is already Opened", "ERROR!!", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainMenue.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(MainMenue.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_OpenAccBtnActionPerformed

    private void LoadTransBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadTransBtnActionPerformed
        // TODO add your handling code here:
        Transaction t1=new Transaction(this, true);
        ArrayList accounts;
        try {
            accounts = Account.load2();
                Account account = (Account)accounts.get((int) AccTable.getValueAt(0, 1)-1);
        FileReader reader =new FileReader("dataFile"+account.getAccNo()+" Transaction.txt");
        BufferedReader br = new BufferedReader(reader);
        t1.TransactionTxt.read(br,null);
        br.close();
        t1.TransactionTxt.requestFocus();
        t1.setVisible(true);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainMenue.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(MainMenue.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainMenue.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_LoadTransBtnActionPerformed

    
    public void addAccount(Account acc)
    {
        DefaultTableModel model = (DefaultTableModel) AccTable.getModel();
        
        model.addRow(new Object[] {acc.getName(),acc.getAccNo(),acc.getBalance(),acc.getAccType(),acc.isOpened()});
        
    }
    
    
    private void reloadRow(Account a)
    {
        DefaultTableModel model = (DefaultTableModel) AccTable.getModel();
        model.setValueAt(a.getBalance(), 0, 2);
        model.setValueAt(a.isOpened(),0 , 4);
        
    }
    
    private void reloadRow2(Account a,int row)
    {
        DefaultTableModel model = (DefaultTableModel) AccTable.getModel();
        model.setValueAt(a.getBalance(), row, 2);
        
    }
    
    private void enableBtns(boolean active)
    {
        WithdrawBtn.setEnabled(active);
        DepositBtn.setEnabled(active);
        TransferBtn.setEnabled(active);
        CloseAccBtn.setEnabled(active);
        OpenAccBtn.setEnabled(active);
        LoadTransBtn.setEnabled(active);
        
    }
    /**
     * @param args the command line arguments
   11  */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainMenue().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(MainMenue.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(MainMenue.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
       
    }
    public javax.swing.JTable getTable()
    {
        return this.AccTable;
    }
    
    

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AboutBtn;
    private javax.swing.JTable AccTable;
    private javax.swing.JButton AddAccBtn;
    private javax.swing.JButton CloseAccBtn;
    private javax.swing.JButton DepositBtn;
    private javax.swing.JButton EnqBtn;
    private javax.swing.JButton ExitBtn;
    private javax.swing.JButton FinishBtn;
    private javax.swing.JButton LoadTransBtn;
    private javax.swing.JButton OpenAccBtn;
    private javax.swing.JButton TransferBtn;
    private javax.swing.JButton WithdrawBtn;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton jButton6;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
